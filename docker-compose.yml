version: '3'

services:
  rabbitmq:
    image: rabbitmq:3-management
    # ports:
    #   - 5672:5672
    #   - 15672:15672
    restart: always

  mongodb:
    image: mongo
    restart: always
    # set initial admin credentials
    #environment:
    #  MONGO_INITDB_ROOT_USERNAME: replay
    #  MONGO_INITDB_ROOT_PASSWORD: replay

  watcher:
    build: '.'
    image: 'replay-lite'
    environment:
      RABBITMQ_URL: 'amqp://rabbitmq'
      MONGODB_URL: 'mongodb://mongodb/replay'
    volumes:
      - './:/usr/src/app'
    command: 'node watcher'
    depends_on:
      - mongodb
      - rabbitmq

  gopro:
    build: '.'
    image: 'replay-lite'
    environment:
      RABBITMQ_URL: 'amqp://rabbitmq'
      MONGODB_URL: 'mongodb://mongodb/replay'
    volumes:
      - './:/usr/src/app'
    command: 'node gopro'
    restart: 'always'
    depends_on:
      - mongodb
      - rabbitmq

  shrink:
    build: '.'
    image: 'replay-lite'
    environment:
      RABBITMQ_URL: 'amqp://rabbitmq'
      MONGODB_URL: 'mongodb://mongodb/replay'
    volumes:
      - './:/usr/src/app'
    command: 'node shrink'
    depends_on:
      - mongodb
      - rabbitmq

  dash:
    build: '.'
    image: 'replay-lite'
    environment:
      RABBITMQ_URL: 'amqp://rabbitmq'
      MONGODB_URL: 'mongodb://mongodb/replay'
    volumes:
      - './:/usr/src/app'
    command: 'node dash'
    depends_on:
      - mongodb
      - rabbitmq

  api:
    build: '.'
    image: 'replay-lite'
    environment:
      RABBITMQ_URL: 'amqp://rabbitmq'
      MONGODB_URL: 'mongodb://mongodb/replay'
    volumes:
      - './:/usr/src/app/'
    command: 'node api'
    depends_on:
      - mongodb
      - rabbitmq

  frontend:
    image: nginx
    volumes:
      - ./frontend:/usr/share/nginx/html

  proxy:
    image: nginx
    volumes:
      - ./proxy/proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./content/video:/var/www/video
    ports:
      - 8080:80
    depends_on:
      - api
      - frontend
